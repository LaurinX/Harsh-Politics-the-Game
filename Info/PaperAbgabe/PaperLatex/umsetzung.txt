Als Entwicklungsumgebung wurde die Unity Engine gewählt, da diese neben einer Grafischen Oberfläche, 
welche sich leicht an die Anforderungen anpassen lässt und über ein Koordinatensystem verfügt, auch über Funktionen und Komponenten verfügt, 
welche auf das Programmieren von Spielen ausgelegt sind.
Das Ziel des Spieles ist es die Lebenspunkte der gegnerischen Spielfigur auf Null zu Reduzieren und ihn somit zu besiegen. Um der gegnerischen Spielfigur
Schaden hinzuzufügen, stehen jedem Spieler verschiedene Waffen zur Verfügung, die zufällig und in regelmäßigen Intervallen dem Spiel dynamisch hinzugefügt werden. Dabei handelt es sich
um die Nahkampfwaffen wie Schwert, Schild und Dolch sowie eine Pistole, die für den Fernkampf dient. Zusätzlich zu diesen Waffen kann jeder Spieler abhängig von der gewählten Spielfigur eine Spezialattacke benutzen.
\subsection{Movementsystem}
Es wird bei der Steuerung der Spielfiguren eine Funktion verwendet, die abhängig von einer Geschwindigkeitsvariable
die Bewegung der Spielfiguren ermöglicht. Dabei wird mit Hilfe dieser Variable die Änderung der Koordinaten der Spielfiguren berechnet.
Indem man einem Spielobjekt die Unity Komponenten Rigidbody2D und Colliderbody zuweist, erhält das Objekt in dem Spiel einen "Körper". 
Das bedeutet, dass das Objekt von der Physik-Engine von Unity beeinflusst werden kann, was die Kollision mit anderen Objekten ermöglicht und eine Schwerkraft simuliert.
Dies ist besonders wichtig um die Spielfigur springen zu lassen, da mit Hilfe dieser Schwerkraft automatisch die 
Änderungen der Koordinaten auf der Y-Achse berechnet werden und die Spielfigur auf einem Boden stehenbleiben kann.
\subsection{Animationen}
Ein wichtiger Punkt, der Spiele lebendig wirken lässt, sind die Animationen. In Harsh Politics sind diese Animationen 
in der Bewegung der Spielfiguren zu finden. So sind sowohl Ruhezustand und Sprungzustand der Spielfiguren animiert, 
als auch Ruhezustand und Angriffszustand der verschiedenen Waffen.
Um ein Spielobjekt zu Animieren stellt Unity die Animator Komponente zur Verfügung, die als Manager für verschiedene Animationen dient. 
In dem Animator kann man festlegen, wann eine Animation abgespielt werden soll und in welche Animation sie danach übergehen soll.
\subsection{Aufbau des Spielfelds}
Das Spiel startet im Hauptmenü, in dem sich jeder Spieler eine Spielfigur aussuchen kann, und man sich auf eine Spielszene einigt. 
Dabei gibt es jeweils die Auswahl zwischen 6 Spielfiguren und 6 Szenen.
Sobald die Auswahl abgeschlossen ist, wird das Spielfeld gebaut. Es wird der Hintergrund festgelegt, 
Hindernisse und Böden hinzugefügt, und die Spielfiguren an ihre Positionen gesetzt.
Da es ein großer Aufwand wäre jeden dieser Schritte einzeln auszuführen, bietet Unity die Möglichkeit sogenannte Prefabs zu erstellen.
Prefabs sind von den Entwicklern vorgefertigte Einstellungen. Beim Bau eines Spielfeldes werden mehrere 
solcher Prefabs benutzt um den Aufwand des Programmes zu minimieren. Zum einen sind die Einstellungen 
für die einzelnen Szenen gespeichert, also die Positionen der Spielfiguren und Hindernisse und zum 
Anderen sind die Einstellungen für die Spielfiguren gespeichert. Dazu zählen Sprite, Verhalten und Animationen.
So ist es möglich Spielfiguren und Szenen in jeder möglichen Variation schnell und zuverlässig in das Spiel zu laden.
\subsection{Waffen}
Eine wichtige Funktion des Spieles ist es, Waffen aufzuheben und wieder abzulegen. Dazu verfügt jede Spielfigur über ein "Hand"-Objekt. Dieses Objekt hat einen Punkt für die Waffenposition definiert. Solange die Spielfigur keine Waffe hält, wird an diesem Punkt eine Faust als Platzhalter dargestellt. Darüber hinaus hat das "Hand"-Objekt einen Bereich definiert, in der das Aufheben von Waffen möglich ist.